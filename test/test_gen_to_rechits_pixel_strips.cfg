# this cfg will run single/multi particle pt-gun
# the pt of the particles will be uniformly
# distributed in the user-specifed pt-range 

# this cfg will then run the simulation and reconstruction
# chain upto debug tracks from a simple helix fit

process mytest =  {
 include "SimGeneral/HepPDTESSource/data/pdt.cfi"
#Geometry
#
include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
es_module = TrackerGeometricDetESModule {}

#Magnetic Field
#
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # strip parameter estimator service for SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 135799753
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 123456789
      }
   }

  # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   module VtxSmeared = VertexGenerator
   {
      string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
      double MeanX = 0.
      double MeanY = 0.
      double MeanZ = 0.
      double SigmaX = 0.015
      double SigmaY = 0.015
      double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
   }

  source = FlatRandomEGunSource
   {
      untracked int32 maxEvents = 10
      untracked PSet PGunParameters =
      {
         # you can request more than 1 particle
         #untracked vint32  PartID = {211,11}
         untracked vint32 PartID = { 13, -13, 13, -13, 13, -13 }
         untracked double MinEta = -2.5
         untracked double MaxEta = 2.5
         untracked double MinPhi = -3.14159265358979323846 # must be in radians
         untracked double MaxPhi =  3.14159265358979323846
         untracked double MinE  = 19.99
         untracked double MaxE  = 20.01
      }
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }
    
  # include geant4 simulation
  include "SimG4Core/Application/data/SimG4Object.cfi"

 # required for Pixel and SiStrip Digitizers
   #
   es_module = TrackerDigiGeometryESModule {}
  # include SiStripDigitizer and SiPixelDigitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"


   module mix = MixingModule
   {
#      secsource input = PoolRASource
#      {
         #
         # starting 050, you can skip secsource block at all if you don't
         # wnat to model mixing/pileup at all;
         # however, an at least "empty mixing" need to be present if you
         # want to perform Ecal/Hcal/CSC/DT digitization - those explicitely
         # require presence of CrossingFrame in the edm::Event
         #
         # alternatively, you can set averageNumber=0 if you don't want
         # to model the pileup
         #
         # to the secsource/PoolRASource, you can give just 1 file or more;
         # this files will make a "concatinated buffer", which will go circular
         # until the loop of primary events is done - thus, it'll never run out
         #
         # WARNING: you can only give miltiple files, if they're generated with
         #          identical sets of tracked parameters;
         #          for example, you canNOT give a file made with a single muon
         #          gun and a file made with a single pion gun, because PartID
         #          is a *tracked* parameter in the gun's PSet;
         #          however, you can merge together files made with other generators,
         #          for example, PythiaSource, because all parameters of it would be
         #          *untracked*
         #
#         untracked vstring fileNames =
#         {'file:/afs/cern.ch/cms/geant4rep/genntpl/muon_simhit_for_pileup.060pre1.root' }
#         string type = "poisson"
#         double averageNumber = 3  # setting this param. to 0 means "No pile-up",
#                                   # that is, digitize current crossing only
#         int32 minBunch = -3
#         int32 maxBunch = 5
#         int32 seed = 1234567
#      }
      int32 bunchspace = 25
   }


  # Pixel Clusterizer and RecHit producer modules
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi" 

  # include SiStripClusterizer (changed for simdata)
  include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_SimData.cfi"

  # include SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"

  module AsciiOutput = AsciiOutputModule {}

  module AllTracks = PoolOutputModule 
  { 
    untracked string fileName = "test_6muons.root"
  }

  path p = 
  {VtxSmeared,	
    g4SimHits,	
	mix,	
    siPixelDigis,	
    siStripDigis, 	
    siPixelClusters,	
    siPixelRecHits,
    siStripClusters,
    siStripMatchedRecHits
  }

  endpath e = 
  {
    AsciiOutput,AllTracks
  }
}

